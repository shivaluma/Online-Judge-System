{
  "swagger": "2.0",
  "info": {
    "description": "API for Online Judge System",
    "version": "1.0.0",
    "title": "BrosJudge API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "shivaluma@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3003",
  "basePath": "/api",
  "schemes": ["http", "https"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Authenticate",
      "description": "Operations about authenticate"
    },
    {
      "name": "Discuss",
      "description": "Operations about discuss"
    },
    {
      "name": "Problem",
      "description": "Operations about problem"
    },
    {
      "name": "Code",
      "description": "Operations about code"
    },
    {
      "name": "Submission",
      "description": "Operations about submission"
    },
    {
      "name": "Tag",
      "description": "Operations about tag"
    }
  ],
  "paths": {
    "/auth/check-email": {
      "get": {
        "tags": ["Authenticate"],
        "summary": "Check email",
        "description": "User check email",
        "operationId": "checkEmail",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "required": true,
            "description": "Email."
          }
        ],
        "responses": {
          "200": {
            "description": "email is valid"
          },
          "400": {
            "description": "Invalid email supplied"
          },
          "409": {
            "description": "email have exist."
          }
        }
      }
    },
    "/auth/check-username": {
      "get": {
        "tags": ["Authenticate"],
        "summary": "Check userame",
        "description": "User check username",
        "operationId": "checkUsername",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "type": "string",
            "required": true,
            "description": "Username of user."
          }
        ],
        "responses": {
          "200": {
            "description": "username is valid"
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "409": {
            "description": "username have exist."
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": ["Authenticate"],
        "summary": "Create user",
        "description": "User create new account",
        "operationId": "createUser",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "Created user object",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["username", "password", "confirmPassword", "email"],
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "confirmPassword": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create account successfully."
          },
          "400": {
            "description": "Cannot create account."
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authenticate"],
        "summary": "Login into system",
        "operationId": "loginUser",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "Enter username and password",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["username", "password"],
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successfully."
          },
          "400": {
            "description": "Please input all fields."
          },
          "401": {
            "description": "Invalid username or password."
          }
        }
      }
    },
    "/auth/google": {
      "post": {
        "tags": ["Authenticate"],
        "summary": "Login into system with google account",
        "operationId": "loginUserGoogle",
        "parameters": [
          {
            "in": "body",
            "name": "AccessToken",
            "description": "Enter google access token",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["ggAccessToken"],
              "properties": {
                "ggAccessToken": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login success"
          },
          "201": {
            "description": "Login success"
          },
          "409": {
            "description": "No username specified, user need to choose a username."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/auth/facebook": {
      "post": {
        "tags": ["Authenticate"],
        "summary": "Login into system with facebook account",
        "operationId": "loginUserFacebook",
        "parameters": [
          {
            "in": "body",
            "name": "AccessToken",
            "description": "Enter google access token",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["id", "fbAccessToken"],
              "properties": {
                "id": {
                  "type": "string"
                },
                "fbAccessToken": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successfully."
          },
          "302": {
            "description": "No username found, please choose a username."
          },
          "409": {
            "description": "There is an account with this email address, please login then bind to this facebook account."
          }
        }
      }
    },
    "/auth/update-username": {
      "post": {
        "tags": ["Authenticate"],
        "summary": "Update user name when login by google or facebook but account does not have a username",
        "operationId": "updateUsername",
        "parameters": [
          {
            "in": "body",
            "name": "username",
            "description": "Update user name when login by google or facebook but account does not have a username",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["username"],
              "properties": {
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successfully."
          },
          "302": {
            "description": "No username found, please choose a username."
          },
          "409": {
            "description": "There is an account with this email address, please login then bind to this facebook account."
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": ["Authenticate"],
        "summary": "Forgot password",
        "operationId": "postForgotPassword",
        "parameters": [
          {
            "in": "body",
            "name": "Email",
            "description": "Email object",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email"],
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get password successfully."
          },
          "400": {
            "description": "Can not get password."
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": ["User"],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": ["User"],
        "summary": "Get minimum info of user, for checking access token.",
        "operationId": "getMe",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Verified success",
            "examples": {
              "id": "userId",
              "username": "username"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user/change-password": {
      "post": {
        "tags": ["User"],
        "summary": "Change password",
        "operationId": "postChangePassword",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Account",
            "description": "Account object",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["oldPassword", "newPassword", "confirmPassword"],
              "properties": {
                "oldPassword": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                },
                "confirmPassword": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Change password successfully."
          },
          "400": {
            "description": "Can not change password."
          }
        }
      }
    },
    "/discuss": {
      "get": {
        "tags": ["Discuss"],
        "summary": "Get all discuss.",
        "operationId": "getDiscusses",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "required": true,
            "description": "Page number."
          },
          {
            "in": "query",
            "name": "search",
            "type": "string",
            "required": false,
            "description": "Search."
          },
          {
            "in": "query",
            "name": "orderBy",
            "type": "string",
            "required": false,
            "description": "Order."
          },
          {
            "in": "query",
            "name": "tag",
            "type": "string",
            "required": false,
            "description": "Tag."
          }
        ],
        "responses": {
          "200": {
            "description": "Get discusses successful."
          },
          "400": {
            "description": "Cant not get discusses."
          }
        }
      },
      "post": {
        "tags": ["Discuss"],
        "summary": "Post discuss.",
        "operationId": "postDiscuss",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "discuss",
            "description": "Created discuss object",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["title", "content", "tags"],
              "properties": {
                "title": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create discusses successful."
          },
          "400": {
            "description": "Cannot create discuss."
          }
        }
      }
    },
    "/discuss/{discussId}": {
      "get": {
        "tags": ["Discuss"],
        "summary": "Get discuss.",
        "operationId": "getDiscuss",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discussId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get discuss successful."
          },
          "400": {
            "description": "Cant not get discuss."
          }
        }
      },
      "put": {
        "tags": ["Discuss"],
        "summary": "Update discuss.",
        "operationId": "putDiscuss",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discussId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Discuss",
            "description": "Update discuss object",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["title", "content", "tags", "previousTags"],
              "properties": {
                "title": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "tag": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "previousTags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update discuss successful."
          },
          "400": {
            "description": "Cant not update discuss."
          }
        }
      },
      "delete": {
        "tags": ["Discuss"],
        "summary": "Delete discuss.",
        "operationId": "deleteDiscuss",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discussId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete discuss successful."
          },
          "400": {
            "description": "Cant not delete discuss."
          }
        }
      }
    },
    "/discuss/{discussId}/view": {
      "put": {
        "tags": ["Discuss"],
        "summary": "Update discuss view.",
        "operationId": "putDiscussView",
        "parameters": [
          {
            "in": "path",
            "name": "discussId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Update discuss view successful."
          },
          "400": {
            "description": "Cant not update view discuss."
          }
        }
      }
    },
    "/discuss/{discussId}/vote": {
      "post": {
        "tags": ["Discuss"],
        "summary": "Change discuss vote.",
        "operationId": "postDiscussVote",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discussId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Vote",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["typeVote"],
              "properties": {
                "typeVote": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Change discuss vote successful."
          },
          "400": {
            "description": "Cant not change discuss vote."
          }
        }
      },
      "get": {
        "tags": ["Discuss"],
        "summary": "Get discuss vote.",
        "operationId": "getDiscussVote",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discussId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get discuss vote successful."
          },
          "400": {
            "description": "Cant not get discuss vote."
          }
        }
      }
    },
    "/discuss/{discussId}/comment": {
      "post": {
        "tags": ["Discuss"],
        "summary": "Post discuss comment.",
        "operationId": "postDiscussCommet",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discussId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Vote",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["content", "parentId"],
              "properties": {
                "content": {
                  "type": "string"
                },
                "parentId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post discuss comment successful."
          },
          "400": {
            "description": "Cant not post discuss comment."
          }
        }
      },
      "get": {
        "tags": ["Discuss"],
        "summary": "Get discuss comment.",
        "operationId": "getDiscussComment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discussId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "parentId",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get discuss comment successful."
          },
          "400": {
            "description": "Cant not get discuss comment."
          }
        }
      }
    },
    "/discuss/{discussId}/comment/{commentId}": {
      "put": {
        "tags": ["Discuss"],
        "summary": "Update discuss comment.",
        "operationId": "putDiscussCommet",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discussId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Vote",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["content"],
              "properties": {
                "content": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update discuss comment successful."
          },
          "400": {
            "description": "Cant not update discuss comment."
          }
        }
      },
      "delete": {
        "tags": ["Discuss"],
        "summary": "Delete discuss comment.",
        "operationId": "deleteDiscussComment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discussId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get discuss comment successful."
          },
          "400": {
            "description": "Cant not get discuss comment."
          }
        }
      }
    },
    "/problem/": {
      "post": {
        "tags": ["Problem"],
        "summary": "Create problem.",
        "operationId": "createProblem",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Problem",
            "description": "Create problem object",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "title",
                "description",
                "difficulty",
                "hasSolution",
                "isPremium",
                "testcases"
              ],
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "difficulty": {
                  "type": "string",
                  "enum": ["easy", "medium", "hard"]
                },
                "hasSolution": {
                  "type": "boolean"
                },
                "isPremium": {
                  "type": "boolean"
                },
                "testcases": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["input", "output"],
                    "properties": {
                      "input": {
                        "type": "string"
                      },
                      "output": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create problem successful."
          },
          "400": {
            "description": "Cant create problem discuss."
          }
        }
      },
      "get": {
        "tags": ["Problem"],
        "summary": "Get problem.",
        "operationId": "getProblem",
        "parameters": [
          {
            "in": "query",
            "name": "problemId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get problem successful."
          },
          "400": {
            "description": "Cant get problem discuss."
          }
        }
      },
      "delete": {
        "tags": ["Problem"],
        "summary": "Delete problem.",
        "operationId": "deleteProblem",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "problemId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete problem successful."
          },
          "400": {
            "description": "Cant delete problem discuss."
          }
        }
      }
    },
    "/problem/list/": {
      "get": {
        "tags": ["Problem"],
        "summary": "Get problems.",
        "operationId": "getProblems",
        "parameters": [
          {
            "in": "query",
            "name": "difficulty",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "hasSolution",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "searchQuery",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get problems successful."
          },
          "400": {
            "description": "Cant get problems discuss."
          }
        }
      }
    },
    "/code/run/": {
      "post": {
        "tags": ["Code"],
        "summary": "Run code.",
        "operationId": "postRunCode",
        "parameters": [
          {
            "in": "body",
            "name": "code",
            "description": "code object",
            "schema": {
              "required": ["source_code", "language_id"],
              "properties": {
                "source_code": {
                  "type": "string"
                },
                "language_id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Run code successful."
          },
          "400": {
            "description": "Cant run code discuss."
          }
        }
      }
    },
    "/submission/": {
      "post": {
        "tags": ["Submission"],
        "summary": "Post submission.",
        "operationId": "postSubmission",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "submission",
            "description": "submission object",
            "schema": {
              "required": ["code", "problemId", "language"],
              "properties": {
                "code": {
                  "type": "string"
                },
                "problemId": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post submission successful."
          },
          "400": {
            "description": "Cant post submission discuss."
          }
        }
      },
      "get": {
        "tags": ["Submission"],
        "summary": "Get submission.",
        "operationId": "getSubmission",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "problemId",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get submission successful."
          },
          "400": {
            "description": "Cant get submission discuss."
          }
        }
      }
    }
  },

  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "avatar": {
          "type": "string",
          "default": null
        },
        "isBan": {
          "type": "boolean",
          "default": false
        },
        "role": {
          "type": "string",
          "enum": [
            "super_admin",
            "judge_admin",
            "forum_admin",
            "user",
            "premium_user"
          ]
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "point": {
          "type": "integer",
          "default": 0
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "parentId": {
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "discussId": {
          "type": "string",
          "format": "uuid"
        },
        "authorUsername": {
          "type": "string"
        },
        "authorAvatar": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Comment"
      }
    },
    "Discuss": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "problemId": {
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "authorUsername": {
          "type": "string"
        },
        "authorAvatar": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Discuss"
      }
    },
    "DiscussVote": {
      "type": "object",
      "properties": {
        "discussId": {
          "type": "string",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "typeVote": {
          "type": "string",
          "enum": ["up", "down"]
        }
      },
      "xml": {
        "name": "DiscussVote"
      }
    },
    "Problem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "difficulty": {
          "type": "string",
          "enum": ["easy", "medium", "hard"]
        },
        "hasSolution": {
          "type": "boolean"
        },
        "isPremium": {
          "type": "boolean"
        },
        "authorId": {
          "type": "string",
          "format": "uuid"
        },
        "authorUsername": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Problem"
      }
    },
    "ProblemVote": {
      "type": "object",
      "properties": {
        "problemId": {
          "type": "integer"
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "typeVote": {
          "type": "string",
          "enum": ["up", "down"]
        }
      },
      "xml": {
        "name": "ProblemVote"
      }
    },
    "SocialLogin": {
      "type": "object",
      "properties": {
        "providerKey": {
          "type": "string"
        },
        "providerType": {
          "type": "string",
          "enum": ["google", "facebook", "github"]
        },
        "verifyToken": {
          "type": "string",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "SocialLogin"
      }
    },
    "Submission": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": ["AC", "WA", "RE", "TLE"]
        },
        "runtime": {
          "type": "integer"
        },
        "language": {
          "type": "string",
          "enum": ["cpp", "c"]
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "problemId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "Submission"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "content": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Testcase": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "input": {
          "type": "string"
        },
        "output": {
          "type": "string"
        },
        "problemId": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Testcase"
      }
    },
    "View": {
      "type": "object",
      "properties": {
        "view": {
          "type": "integer"
        },
        "discussId": {
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "View"
      }
    }
  }
}
